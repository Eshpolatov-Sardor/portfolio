"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _nodeProcess = _interopRequireDefault(await jitiImport("node:process"));function _interopRequireDefault(e) {return e && e.__esModule ? e : { default: e };}var _default = exports.default =

defineNuxtConfig({
  app: {
    head: {
      viewport: 'width=device-width,initial-scale=1',
      meta: [
      { name: 'viewport', content: 'width=device-width, initial-scale=1' },
      { name: 'apple-mobile-web-app-status-bar-style', content: 'black-translucent' }]

    }
  },

  nitro: {
    esbuild: {
      options: {
        target: 'esnext'
      }
    },
    prerender: {
      crawlLinks: false,
      routes: ['/'],
      ignore: ['/hi']
    }
  },

  modules: [
  '@nuxt/devtools',
  '@vueuse/nuxt',
  '@pinia/nuxt',
  '@nuxtjs/color-mode',
  // i18n support by nuxt module
  // comment if you don't want to use i18n.
  '@nuxtjs/i18n',
  '@nuxt/image'],


  colorMode: {
    classSuffix: ''
  },

  // i18n support
  // comment if you don't want to use i18n.
  i18n: {
    vueI18n: './i18n.config.ts'
  },

  imports: {
    dirs: [
    // Scan top-level store modules
    'stores']

  },

  css: ['~/assets/css/main.css'],

  postcss: {
    plugins: {
      tailwindcss: {},
      autoprefixer: {}
    }
  },

  typescript: {
    tsConfig: {
      include: ['./types/**/*.d.ts']
    },
    shim: false
  },

  devtools: {
    enabled: true
  },

  runtimeConfig: {
    public: {
      WHAT_ENV: _nodeProcess.default.env.WHAT_ENV || 'env_dev'
    }
  },

  compatibilityDate: '2024-09-08'
}); /* v9-40856aa6a23120f2 */
